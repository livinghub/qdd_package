language: cpp
os: linux
dist: focal

jobs:
  include:
    - env: BUILD='Debug' CC=gcc CXX=g++ COVERAGE=1 COV_EXE=gcov
      addons:
        apt:
          packages:
            - cmake
            - ninja-build
            - lcov

    - env: BUILD='Release' CC=gcc CXX=g++ COVERAGE=0
      addons:
        apt:
          packages:
            - cmake
            - ninja-build

    - env: BUILD='Release' CC=gcc-10 CXX=g++-10 COVERAGE=0
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - cmake
            - ninja-build
            - gcc-10
            - g++-10

    - env: BUILD='Release' CC=clang-11 CXX=clang++-11 COVERAGE=0
      addons:
        apt:
          sources:
            - sourceline: 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - cmake
            - ninja-build
            - clang-11

    - os: osx
      osx_image: xcode12
      env: BUILD='Release' CC=clang CXX=clang++ COVERAGE=0
      addons:
        homebrew:
          packages:
            - cmake
            - ninja

    - os: osx
      osx_image: xcode12
      env: BUILD='Release' CC=gcc-10 CXX=g++-10 COVERAGE=0
      addons:
        homebrew:
          packages:
            - cmake
            - ninja
            - gcc@10

    - os: windows
      env: BUILD='Release' CC=gcc CXX=g++ COVERAGE=0

script:
  - mkdir -p build && cd build
  - |
    if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then
      cmake .. -G "Visual Studio 15 2017" -A x64 -LA -DCMAKE_BUILD_TYPE=${BUILD} -DCOVERAGE=${COVERAGE}
    else
      cmake .. -G Ninja -LA -DCMAKE_BUILD_TYPE=${BUILD} -DCOVERAGE=${COVERAGE}
    fi
  - cmake --build . --config ${BUILD}
  - ctest -C ${BUILD}

after_success:
  - |
    if [[ -n "${COV_EXE}" ]]; then
      # Create lcov report
      lcov --gcov-tool ${COV_EXE} --capture --directory . --base-directory . --output-file coverage.info
      lcov --remove coverage.info '/usr/*' '*/extern/*' --output-file coverage.info # filter system-files
      lcov --list coverage.info # debug info
      # Uploading report to CodeCov
      bash <(curl -s https://codecov.io/bash) -f coverage.info -t 60b604e5-b5b6-4f16-bca0-15344f833422 || echo "Codecov did not collect coverage reports"
    fi
